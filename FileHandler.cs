namespace uwap.WebFramework.Plugins;

public partial class FilePlugin : Plugin
{
	public override byte[]? GetFile(string relPath, string pathPrefix, string domain)
		=> relPath switch
		{
			"/edit-d.js" => System.Text.Encoding.UTF8.GetBytes($"async function AddNode(d) {{\n    HideError();\n    try {{\n        var n = encodeURIComponent(document.querySelector(\"#name\").value);\n        if (n === \"\")\n        {{\n            ShowError(\"Enter a name.\");\n            return;\n        }}\n        var u = GetQuery(\"u\");\n        var p = encodeURIComponent(GetQuery(\"p\"));\n        switch ((await fetch(`/api{pathPrefix}/add?u=${{u}}&p=${{p}}&n=${{n}}&d=${{d}}`)).status) {{\n            case 200:\n                window.location.assign(`{pathPrefix}/edit?u=${{u}}&p=${{p}}%2f${{n}}`)\n                break;\n            case 302:\n                ShowError(\"Another file or directory with this name already exists.\");\n                break;\n            case 400:\n                ShowError(\"Invalid name.\");\n                break;\n            default:\n                ShowError(\"Connection failed.\");\n                break;\n        }}\n    }} catch {{\n        ShowError(\"Connection failed.\");\n    }}\n}}\n\nasync function Upload() {{\n    HideError();\n    var files = document.querySelector(\"#files\").files;\n    if (files.length === 0) {{\n        ShowError(\"No files selected!\");\n        return;\n    }}\n    var form = new FormData();\n    for (var f of files)\n    form.append(\"file\", f);\n    var request = new XMLHttpRequest();\n    request.open(\"POST\", `{pathPrefix}/upload?u=${{GetQuery(\"u\")}}&p=${{encodeURIComponent(GetQuery(\"p\"))}}`);\n    request.upload.addEventListener(\"progress\", event => {{\n        document.querySelector(\"#upload\").innerText = `${{((event.loaded / event.total) * 100).toFixed(2)}}%`;\n    }});\n    request.onreadystatechange = () => {{\n        if (request.readyState == 4) {{\n            switch (request.status) {{\n                case 200:\n                    document.querySelector('#upload').innerText = 'Done!';\n                    window.location.reload();\n                    break;\n                case 413:\n                    document.querySelector('#upload').innerText = 'Upload';\n                    ShowError(\"At least one of the selected files is too large!\");\n                    break;\n                case 507:\n                    document.querySelector('#upload').innerText = 'Upload';\n                    ShowError(\"Uploading these files would exceed your account's storage limit. You can most likely obtain more storage space by contacting the administrator.\");\n                    break;\n                default:\n                    document.querySelector('#upload').innerText = 'Upload';\n                    ShowError(\"Connection failed. A possible cause is that at least one of the selected files might be too large.\");\n                    break;\n            }}\n        }}\n    }};\n    request.send(form);\n}}"),
			"/editor.css" => (byte[]?)PluginFiles_ResourceManager.GetObject("File0"),
			"/editor.js" => System.Text.Encoding.UTF8.GetBytes($"let ch = 0;\nlet ta = document.querySelector('#text');\nlet editor = document.querySelector('#editor');\nlet sidebar = document.querySelector('.sidebar');\nlet full = document.querySelector('.full');\nlet save = document.querySelector('#save');\nlet back = document.querySelector('#back');\nwindow.onresize = Resize;\nta.onclick = Refocus;\nResize();\nLoad();\ndocument.addEventListener('keydown', e => {{\n    if (e.ctrlKey && e.key === 's') {{\n        e.preventDefault();\n        Save();\n    }}\n}});\nwindow.addEventListener(\"beforeunload\", e => {{\n    if (save.innerText === \"Save\" && back.innerText == \"Back\") {{\n        var confirmationMessage = \"You have unsaved changes!\";\n        (e || window.event).returnValue = confirmationMessage;\n        return confirmationMessage;\n    }}\n}});\n\nfunction Resize() {{\n    let fullComp = window.getComputedStyle(full);\n    let editorComp = window.getComputedStyle(editor);\n    let newHeight = Math.floor(window.visualViewport.height - parseFloat(editorComp['marginTop']) - parseFloat(fullComp['paddingTop']) - parseFloat(fullComp['paddingBottom']));\n    editor.style.flex = '1';\n    editor.style.height = newHeight + 'px';\n    Refocus();\n}}\n\nfunction Refocus() {{\n    let nh = ta.clientHeight;\n    if (ch > nh && document.activeElement === ta) {{\n        ta.blur();\n        ta.focus();\n    }}\n    ch = nh;\n}}\n\nasync function Load() {{\n    try {{\n        let response = await fetch(`/api{pathPrefix}/load?u=${{GetQuery(\"u\")}}&p=${{encodeURIComponent(GetQuery(\"p\"))}}`, {{cache:\"no-store\"}});\n        switch (response.status) {{\n            case 200:\n                var value = await response.text();\n                if (save.innerText === \"Save\") {{\n                    if (ta.value === value) {{\n                        save.innerText = \"Saved!\";\n                        save.className = \"\";\n                    }}\n                }} else ta.value = value;\n                ta.placeholder = \"Enter something...\";\n                break;\n            case 201:\n                ta.value = \"\";\n                ta.placeholder = \"Enter something...\";\n                ta.focus();\n                break;\n            default:\n                ta.value = \"\";\n                ta.placeholder = \"Error loading this file's content! Try reloading the page.\";\n                save.innerText = \"Error!\";\n                save.className = \"red\";\n        }}\n    }} catch {{\n        ta.value = \"\";\n        ta.placeholder = \"Error loading this file's content! Try reloading the page.\";\n        save.innerText = \"Error!\";\n        save.className = \"red\";\n    }}\n}}\n\nfunction TextChanged() {{\n    save.innerText = \"Save\";\n    save.className = \"green\";\n}}\n\nasync function Save() {{\n    back.innerText = \"Back\";\n    save.innerText = \"Saving...\";\n    save.className = \"green\";\n    try {{\n        switch ((await fetch(`{pathPrefix}/save?u=${{GetQuery(\"u\")}}&p=${{encodeURIComponent(GetQuery(\"p\"))}}`, {{ method: \"POST\", body: ta.value }})).status) {{\n            case 200:\n                save.innerText = \"Saved!\";\n                save.className = \"\";\n                break;\n            case 507:\n                save.innerText = \"Too long!\";\n                save.className = \"red\";\n                alert(\"Saving this file would exceed your account's storage limit. Try shortening it or copy the text to save it somewhere else for the time being. You can most likely obtain more storage space by contacting the administrator.\");\n                break;\n            default:\n                save.innerText = \"Error!\";\n                save.className = \"red\";\n                break;\n        }}\n    }} catch {{\n        save.innerText = \"Error!\";\n        save.className = \"red\";\n    }}\n}}\n\nfunction GoBack() {{\n    if (save.innerText === \"Save\" && back.innerText == \"Back\")\n        back.innerText = \"Discard?\";\n    else window.location.assign(`{pathPrefix}/edit?u=${{GetQuery(\"u\")}}&p=${{encodeURIComponent(GetQuery(\"p\"))}}`);\n}}"),
			"/icon.ico" => (byte[]?)PluginFiles_ResourceManager.GetObject("File1"),
			"/icon.png" => (byte[]?)PluginFiles_ResourceManager.GetObject("File2"),
			"/icon.svg" => (byte[]?)PluginFiles_ResourceManager.GetObject("File3"),
			"/manifest.json" => System.Text.Encoding.UTF8.GetBytes($"{{\n    \"name\": \"Files ({Parsers.DomainMain(domain)})\",\n    \"short_name\": \"Files\",\n    \"start_url\": \"{(pathPrefix == "" ? "/" : pathPrefix)}\",\n    \"display\": \"minimal-ui\",\n    \"background_color\": \"#000000\",\n    \"theme_color\": \"#202024\",\n    \"orientation\": \"portrait-primary\",\n    \"icons\": [\n      {{\n        \"src\": \"{pathPrefix}/icon.svg\",\n        \"type\": \"image/svg+xml\",\n        \"sizes\": \"any\"\n      }},\n      {{\n        \"src\": \"{pathPrefix}/icon.png\",\n        \"type\": \"image/png\",\n        \"sizes\": \"512x512\"\n      }},\n      {{\n        \"src\": \"{pathPrefix}/icon.ico\",\n        \"type\": \"image/x-icon\",\n        \"sizes\": \"16x16 24x24 32x32 48x48 64x64 72x72 96x96 128x128 256x256\"\n      }}\n    ],\n    \"launch_handler\": {{\n      \"client_mode\": \"navigate-new\"\n    }},\n    \"related_applications\": [\n      {{\n        \"platform\": \"webapp\",\n        \"url\": \"{pathPrefix}/manifest.json\"\n      }}\n    ],\n    \"offline_enabled\": false,\n    \"omnibox\": {{\n      \"keyword\": \"files\"\n    }},\n    \"version\": \"0.1.0\"\n  }}\n  "),
			"/more.js" => System.Text.Encoding.UTF8.GetBytes($"async function Delete() {{\n    HideError();\n    var del = document.querySelector(\"#delete\").children[0];\n    if (del.innerText !== \"Delete?\") {{\n        del.innerText = \"Delete?\";\n        return;\n    }}\n    try {{\n        var u = GetQuery(\"u\");\n        var p = GetQuery(\"p\");\n        if ((await fetch(`/api{pathPrefix}/delete?u=${{u}}&p=${{encodeURIComponent(p)}}`)).status === 200)\n            window.location.assign(`{pathPrefix}/edit?u=${{u}}&p=${{encodeURIComponent(p.split(\"/\").slice(0, -1).join(\"/\"))}}`);\n        else ShowError(\"Connection failed.\");\n    }} catch {{\n        ShowError(\"Connection failed.\");\n    }}\n}}\n\nasync function SaveName() {{\n    HideError();\n    var rename = document.querySelector(\"#name-save\");\n    var name = document.querySelector(\"#name\").value;\n    if (name === \"\") {{\n        ShowError(\"Enter a name.\");\n        return;\n    }}\n    try {{\n        var u = GetQuery(\"u\");\n        var p = GetQuery(\"p\");\n        switch ((await fetch(`/api{pathPrefix}/rename?u=${{u}}&p=${{encodeURIComponent(p)}}&n=${{encodeURIComponent(name)}}`)).status) {{\n            case 200:\n                rename.className = \"\";\n                rename.innerText = \"Saved!\";\n                window.location.assign(`{pathPrefix}/edit?u=${{u}}&p=${{encodeURIComponent(p.split(\"/\").slice(0, -1).join(\"/\") + \"/\" + name)}}`);\n                break;\n            case 302:\n                ShowError(\"Another file or directory with this name already exists.\");\n                break;\n            case 400:\n                ShowError(\"Invalid name.\");\n                break;\n            default:\n                ShowError(\"Connection failed.\");\n                break;\n        }}\n    }} catch {{\n        ShowError(\"Connection failed.\");\n    }}\n}}\n\nfunction NameChanged() {{\n    var rename = document.querySelector(\"#name-save\");\n    rename.className = \"green\";\n    rename.innerText = \"Save\";\n}}\n\nasync function AddShare() {{\n    HideError();\n    try {{\n        if ((await fetch(`/api{pathPrefix}/add-share?u=${{GetQuery(\"u\")}}&p=${{encodeURIComponent(GetQuery(\"p\"))}}`)).status === 200)\n            window.location.reload();\n        else ShowError(\"Connection failed.\");\n    }} catch {{\n        ShowError(\"Connection failed.\");\n    }}\n}}\n\nasync function RemoveShare() {{\n    HideError();\n    try {{\n        if ((await fetch(`/api{pathPrefix}/remove-share?u=${{GetQuery(\"u\")}}&p=${{encodeURIComponent(GetQuery(\"p\"))}}`)).status === 200)\n            window.location.reload();\n        else ShowError(\"Connection failed.\");\n    }} catch {{\n        ShowError(\"Connection failed.\");\n    }}\n}}"),
			"/profiles.js" => System.Text.Encoding.UTF8.GetBytes($"async function SaveLimit() {{\n    HideError();\n    var button = document.querySelector(\"#save-limit\");\n    var value = document.querySelector(\"#limit\").value;\n    if (value === \"\") {{\n        ShowError(\"Enter a limit.\");\n    }} else try {{\n        switch ((await fetch(`/api{pathPrefix}/limit?u=${{GetQuery(\"u\")}}&v=${{encodeURIComponent(value)}}`)).status) {{\n            case 200:\n                button.className = \"\";\n                button.innerText = \"Saved!\";\n                window.location.reload();\n                break;\n            case 400:\n                ShowError(\"Invalid value.\");\n                break;\n            default:\n                ShowError(\"Connection failed.\");\n                break;\n        }}\n    }} catch {{\n        ShowError(\"Connection failed.\");\n    }}\n}}\n\nfunction ChangedLimit() {{\n    HideError();\n    var button = document.querySelector(\"#save-limit\");\n    button.className = \"green\";\n    button.innerText = \"Save\";\n}}\n\nasync function Delete() {{\n    HideError();\n    let deleteText = document.querySelector(\"#delete\").firstElementChild;\n    if (deleteText.textContent === \"Delete\")\n        deleteText.textContent = \"Delete everything?\";\n    else try {{\n        if ((await fetch(`/api{pathPrefix}/delete-profile?u=${{GetQuery(\"u\")}}`)).status === 200)\n            window.location.assign(\"{pathPrefix}/profiles\");\n        else ShowError(\"Connection failed.\");\n    }} catch {{\n        ShowError(\"Connection failed.\");\n    }} \n}}"),
			"/query.js" => (byte[]?)PluginFiles_ResourceManager.GetObject("File4"),
			"/share.js" => System.Text.Encoding.UTF8.GetBytes($"async function AddAccess() {{\n    HideError();\n    var un = document.querySelector(\"#name\").value;\n    if (un === \"\") {{\n        ShowError(\"Enter a username.\");\n        return;\n    }}\n    var canEdit = document.querySelector(\"#edit\").checked;\n    try {{\n        switch ((await fetch(`/api{pathPrefix}/share?u=${{GetQuery(\"u\")}}&p=${{encodeURIComponent(GetQuery(\"p\"))}}&un=${{un}}&e=${{canEdit}}`)).status) {{\n            case 200:\n                window.location.reload();\n                break;\n            case 404:\n                ShowError(\"No user with this username was found.\");\n                break;\n            default:\n                ShowError(\"Connection failed.\");\n                break;\n        }}\n    }} catch {{\n        ShowError(\"Connection failed.\");\n    }}\n}}\n\nasync function SetAccess(uid, canEdit) {{\n    HideError();\n    try {{\n        if ((await fetch(`/api{pathPrefix}/share?u=${{GetQuery(\"u\")}}&p=${{encodeURIComponent(GetQuery(\"p\"))}}&uid=${{uid}}&e=${{canEdit}}`)).status === 200)\n            window.location.reload();\n        else ShowError(\"Connection failed.\");\n    }} catch {{\n        ShowError(\"Connection failed.\");\n    }}\n}}\n\nasync function RemoveAccess(uid) {{\n    HideError();\n    try {{\n        if ((await fetch(`/api{pathPrefix}/share?u=${{GetQuery(\"u\")}}&p=${{encodeURIComponent(GetQuery(\"p\"))}}&uid=${{uid}}`)).status === 200)\n            window.location.reload();\n        else ShowError(\"Connection failed.\");\n    }} catch {{\n        ShowError(\"Connection failed.\");\n    }}\n}}\n\nasync function CreateInvite() {{\n    HideError();\n    var expiration = document.querySelector(\"#expiration\").value;\n    if (expiration === \"\") {{\n        ShowError(\"Enter a number of days for the invite to expire after or 0 to disable expiration.\");\n        return;\n    }}\n    try {{\n        switch ((await fetch(`/api{pathPrefix}/invite?u=${{GetQuery(\"u\")}}&p=${{encodeURIComponent(GetQuery(\"p\"))}}&e=${{expiration}}`)).status) {{\n            case 200:\n                window.location.reload();\n                break;\n            case 400:\n                ShowError(\"Invalid expiration.\");\n                break;\n            default:\n                ShowError(\"Connection failed.\");\n                break;\n        }}\n    }} catch {{\n        ShowError(\"Connection failed.\");\n    }}\n}}\n\nasync function DeleteInvite() {{\n    HideError();\n    try {{\n        if ((await fetch(`/api{pathPrefix}/invite?u=${{GetQuery(\"u\")}}&p=${{encodeURIComponent(GetQuery(\"p\"))}}`)).status === 200)\n            window.location.reload();\n        else ShowError(\"Connection failed.\");\n    }} catch {{\n        ShowError(\"Connection failed.\");\n    }}\n}}"),
			"/shares.js" => System.Text.Encoding.UTF8.GetBytes($"async function RemoveShare() {{\n    HideError();\n    try {{\n        if ((await fetch(`/api{pathPrefix}/remove-share?u=${{GetQuery(\"u\")}}&p=${{encodeURIComponent(GetQuery(\"p\"))}}`)).status === 200)\n            window.location.assign(\"{pathPrefix}/shares\");\n        else ShowError(\"Connection failed.\");\n    }} catch {{\n        ShowError(\"Connection failed.\");\n    }}\n}}"),
			_ => null
		};
	
	public override string? GetFileVersion(string relPath)
		=> relPath switch
		{
			"/edit-d.js" => "1714686355556",
			"/editor.css" => "1714470098815",
			"/editor.js" => "1716130137952",
			"/icon.ico" => "1714607096462",
			"/icon.png" => "1714606567795",
			"/icon.svg" => "1714606558695",
			"/manifest.json" => "1714607679632",
			"/more.js" => "1715032735352",
			"/profiles.js" => "1715345561030",
			"/query.js" => "1714256773673",
			"/share.js" => "1714650270939",
			"/shares.js" => "1715032511232",
			_ => null
		};
	
	private static readonly System.Resources.ResourceManager PluginFiles_ResourceManager = new("FilePlugin.Properties.PluginFiles", typeof(FilePlugin).Assembly);
}